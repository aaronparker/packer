# Variable Group 'Windows10Enterprise-enAU' was defined in the Variables tab
# Variable Group 'WindowsVirtualDesktop-enAU' was defined in the Variables tab
# Variable Group 'GitHub' was defined in the Variables tab
name: $(Date:yyyyMMdd).$(Rev:rr)
resources:
  repositories:
  - repository: self
    type: git
    ref: main
jobs:
- job: Job_1
  displayName: Packer build
  timeoutInMinutes: 120
  pool:
    vmImage: windows-2019
  steps:
  - checkout: self
    clean: true
    submodules: recursive
  - task: PackerTool@0
    displayName: Install Packer
  - task: PowerShell@2
    displayName: Download Packer plugins
    inputs:
      filePath: pipeline/Get-PackerPlugins.ps1
      script: ''
  - task: Packer@1
    name: packerValidate
    displayName: Packer validate
    inputs:
      connectedServiceAzure: ef1deb8d-e2cc-46bb-9cc8-5dc5551d9594
      templatePath: templates/rds/PackerTemplate-WindowsAzure.json
      command: validate
      variables: >-
        image_publisher=$(image_publisher)

        image_offer=$(image_offer)

        image_sku=$(image_sku)

        image_date=$(Build.BuildNumber)

        managed_image_resource_group_name=$(managed_image_resource_group_name)

        vm_size=$(vm_size)

        tag_owner=$(owner)

        tag_created_date=$(Build.BuildNumber)

        apps_url=$(apps_url)

        packages_url=$(packages_url)

        build_key_vault=$(build_key_vault)

        build_resource_group=$(build_resource_group)

        build_vnet=$(build_vnet)

        build_subnet=$(build_subnet)

        build_source_repo=$(build_source_repo)

        destination_gallery_resource_group=$(destination_gallery_resource_group)

        destination_gallery_name=$(destination_gallery_name)

        destination_image_version=1.0.$(Build.BuildId)

        destination_replication_regions=$(destination_replication_regions)
  - task: Packer@1
    name: packerBuild
    displayName: Packer build
    inputs:
      connectedServiceAzure: ef1deb8d-e2cc-46bb-9cc8-5dc5551d9594
      templatePath: templates/rds/PackerTemplate-WindowsAzure.json
      force: true
      variables: >-
        image_publisher=$(image_publisher)

        image_offer=$(image_offer)

        image_sku=$(image_sku)

        image_date=$(Build.BuildNumber)

        managed_image_resource_group_name=$(managed_image_resource_group_name)

        vm_size=$(vm_size)

        tag_owner=$(owner)

        tag_created_date=$(Build.BuildNumber)

        apps_url=$(apps_url)

        packages_url=$(packages_url)

        build_key_vault=$(build_key_vault)

        build_resource_group=$(build_resource_group)

        build_vnet=$(build_vnet)

        build_subnet=$(build_subnet)

        build_source_repo=$(build_source_repo)

        destination_gallery_resource_group=$(destination_gallery_resource_group)

        destination_gallery_name=$(destination_gallery_name)

        destination_image_version=1.0.$(Build.BuildId)

        destination_replication_regions=$(destination_replication_regions)
  - task: PowerShell@2
    displayName: Expand report archive
    inputs:
      filePath: pipeline/Expand-ReportFiles.ps1
      arguments: -Verbose
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifact: image-details'
    inputs:
      PathtoPublish: $(System.DefaultWorkingDirectory)\reports
      ArtifactName: image-details
  - task: PowerShell@2
    displayName: Install required modules
    inputs:
      filePath: pipeline/Install-RequiredModules.ps1
      arguments: -Verbose
  - task: PowerShell@2
    displayName: Publish report markdown
    inputs:
      filePath: pipeline/Publish-MarkdownReport.ps1
      arguments: -Verbose
  - task: PowerShell@2
    displayName: Update TOC markdown
    inputs:
      filePath: pipeline/Update-MarkdownToc.ps1
      arguments: -Verbose
  - task: PowerShell@2
    displayName: Commit changes
    inputs:
      filePath: pipeline/Push-Git.ps1
      arguments: $(GitHubKey)
...
