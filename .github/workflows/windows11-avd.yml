name: build-windows11-templates

on:
  push:
    branches:
      - main
    paths:
#      - .github/workflows/windows11-avd.yml
      - templates/rds/PackerTemplate-WindowsAzure.pkr.hcl
      - build/rds/**.ps1
      - build/rds/**.xml
  workflow_dispatch:
    branches:
        - main

env:
  LOCATION: 'AustraliaEast'
  DESTINATION_RESOURCE_GROUP_NAME: 'rg-Images-AustraliaEast'
  DESTINATION_GALLERY_NAME: 'sigWindowsVirtualDesktopGitHub'
  DESTINATION_PUBLISHER: 'MicrosoftWindowsDesktop'
  DESTINATION_IMAGE_VERSION: 1.0.${{ github.run_number }}
  DESTINATION_REPLICATION_REGIONS: 'AustraliaEast'
  AZURE_SUBSCRIPTION_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).subscriptionId }}
  AZURE_TENANT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).tenantId }}
  AZURE_CLIENT_ID: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientId }}
  AZURE_CLIENT_SECRET: ${{ fromJson(secrets.AZURE_CREDENTIALS).clientSecret }}

  APPS_DIRECTORY: 'C:\Apps'
  APPS_URL: 'https://stpyimgbuildaue.blob.core.windows.net/apps'
  BUILD_KEY_VAULT: 'stpyimageaustraliaeast'
  BUILD_RESOURCE_GROUP: 'rg-ImageBuild-AustraliaEast'
  BUILD_SUBNET: 'subnet-Packer'
  BUILD_VNET: 'vnet-ImageBuild-AustraliaEast'
#  IMAGE_DATE: '$(Date:yyyyMMdd).${{ github.run_number }}'
#  IMAGE_OFFER: 'Windows-11'
#  IMAGE_PUBLISHER: 'MicrosoftWindowsDesktop'
#  IMAGE_SKU: 'win11-21h2-ent'
  LOCALE: 'en-AU'
  MANAGED_IMAGE_RESOURCE_GROUP_NAME: 'rg-Images-AustraliaEast'
  PACKAGES_URL: 'https://stpyimgbuildaue.blob.core.windows.net/packages'
  TAG_FUNCTION: 'Gold image'
  TAG_OWNER: 'GitHub'
  TAG_TYPE: 'Azure Virtual Desktop'
  VM_SIZE: 'Standard_D2as_v4'
#  WINRMUSER: 'winrm'

jobs:
  prepare-image-gallery:
    runs-on: ubuntu-latest
    name: Prepare Image Gallery

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +"%Y%m%d")"

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Image Gallery Template
        uses: azure/CLI@v1
        with:
          azcliversion: 2.34.1
          inlineScript: |
            az account show
            az deployment sub create \
              --subscription ${{ env.AZURE_SUBSCRIPTION_ID }} \
              --name "imageGallery-${{ steps.date.outputs.date }}" \
              --location $LOCATION \
              --template-file bicep/gallery/main.bicep \
              --parameters location="$LOCATION" resourceGroupName="$DESTINATION_RESOURCE_GROUP_NAME" imageGalleryName="$DESTINATION_GALLERY_NAME"

  build-image:
    runs-on: ubuntu-latest
    name: Build Image
    needs: prepare-image-gallery
    strategy:
      # Limit parallel builds so don't use all Azure core quota
      max-parallel: 2
      matrix:
        image_id: [Windows-11-Ent, Windows-11-Avd]
        include:
          - image_id: Windows-11-Ent
            packer_file: "templates/rds/PackerTemplate-WindowsAzure-Test.pkr.hcl"
            destination_image_name: 'MicrosoftWindowsDesktop-Windows-11-win11-21h2-ent'
            destination_image_description: "Windows 11 Enterprise 21H2"
            source_image_publisher: MicrosoftWindowsDesktop
            source_image_offer: Windows-11
            source_image_sku: win11-21h2-ent
            destination_os_type: Windows
            destination_offer: Windows-11
            destination_sku: win11-21h2-ent

          - image_id: Windows-11-Avd
            packer_file: "templates/rds/PackerTemplate-WindowsAzure-Test.pkr.hcl"
            destination_image_name: 'MicrosoftWindowsDesktop-Windows-11-win11-21h2-avd'
            destination_image_description: "Windows 11 Enterprise 21H2"
            source_image_publisher: MicrosoftWindowsDesktop
            source_image_offer: Windows-11
            source_image_sku: win11-21h2-avd
            destination_os_type: Windows
            destination_offer: Windows-11
            destination_sku: win11-21h2-avd
    env:
      PACKER_FILE: ${{ matrix.packer_file }}
      DESTINATION_IMAGE_NAME: ${{ matrix.destination_image_name }}
      DESTINATION_IMAGE_DESCRIPTION: ${{ matrix.destination_image_description }}
      SOURCE_IMAGE_PUBLISHER: ${{ matrix.source_image_publisher }}
      SOURCE_IMAGE_OFFER: ${{ matrix.source_image_offer }}
      SOURCE_IMAGE_SKU: ${{ matrix.source_image_sku }}
      DESTINATION_OS_TYPE: ${{ matrix.destination_os_type }}
      DESTINATION_OFFER: ${{ matrix.destination_offer }}
      DESTINATION_SKU: ${{ matrix.destination_sku }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Build image date
        id: date
        run: echo "::set-output name=date::$(date +"%Y%m%d")"

      - name: Initialise plug-ins
        uses: hashicorp/packer-github-actions@master
        with:
          command: init
          target: ${{ env.PACKER_FILE }}

      - name: Validate Packer Template
        uses: hashicorp/packer-github-actions@master
        with:
          command: validate
          arguments: "-syntax-only"
          target: ${{ env.PACKER_FILE }}

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Image Definition
        uses: azure/CLI@v1
        with:
          azcliversion: 2.34.1
          inlineScript: |
            az account show
            az deployment group create \
              --subscription ${{ env.AZURE_SUBSCRIPTION_ID }} \
              --name "${DESTINATION_IMAGE_NAME}-${{ steps.date.outputs.date }}" \
              --resource-group $DESTINATION_RESOURCE_GROUP_NAME \
              --template-file bicep/gallery/modules/imageDefinition.bicep \
              --parameters location="$LOCATION" imageGalleryName="$DESTINATION_GALLERY_NAME" imageDefinitionName="$DESTINATION_IMAGE_NAME" osType="$DESTINATION_OS_TYPE" imageDescription="$DESTINATION_IMAGE_DESCRIPTION" publisher="$DESTINATION_PUBLISHER" offer="$DESTINATION_OFFER" sku="$DESTINATION_SKU"

      - name: Build Image Definition
        uses: hashicorp/packer-github-actions@master
        with:
          command: build
          arguments: "-color=true -on-error=abort -var apps_url=${{ env.APPS_URL }} -var azure_subscription_id=${{ env.AZURE_SUBSCRIPTION_ID }} -var azure_tenant_id=${{ env.AZURE_TENANT_ID }} -var azure_client_id=${{ env.AZURE_CLIENT_ID }} -var azure_client_secret=${{ env.AZURE_CLIENT_SECRET }} -var build_resource_group=${{ env.BUILD_RESOURCE_GROUP }} -var build_vnet=${{ env.BUILD_VNET }} -var build_subnet=${{ env.BUILD_SUBNET }} -var destination_resource_group_name=${{ env.DESTINATION_RESOURCE_GROUP_NAME }} -var destination_replication_regions=${{ env.LOCATION }} -var destination_gallery_name=${{ env.DESTINATION_GALLERY_NAME }} -var destination_image_version=${{ env.DESTINATION_IMAGE_VERSION }} -var image_date=${{ env.IMAGE_DATE }} -var managed_image_resource_group_name=${{ env.MANAGED_IMAGE_RESOURCE_GROUP_NAME }} -var location=${{ env.LOCATION }} -var packages_url=${{ env.PACKAGES_URL }} -var source_image_publisher=${{ env.SOURCE_IMAGE_PUBLISHER }} -var source_image_offer=${{ env.SOURCE_IMAGE_OFFER }} -var source_image_sku=${{ env.SOURCE_IMAGE_SKU }} -var tag_owner=${{ env.TAG_OWNER }} -var tag_created_date=${{ env.IMAGE_DATE}} -var tag_build_source_repo=${{ github.repository }} -var vm_size=${{ env.VM_SIZE }} -var working_directory=${{ github.workspace }}"
          target: ${{ env.PACKER_FILE }}
        env:
          PACKER_LOG: 1
          IMAGE_DATE: "${{ steps.date.outputs.date }}.${{ github.run_number }}"
