{
    "variables": {
        "winrmuser": "packer",
        "client_id": "",
        "client_secret": "",
        "subscription_id": "",
        "tenant_id": "",
        "image_date": "",
        "managed_image_resource_group_name": "",
        "image_publisher": "MicrosoftWindowsDesktop",
        "image_offer": "Windows-10",
        "image_sku": "20h1-ent",
        "location": "australiaeast",
        "vm_size": "Standard_D2_v3",
        "WorkingDirectory": "{{env `System_DefaultWorkingDirectory`}}",
        "Locale": "en-AU",
        "AppsUrl": "",
        "PackagesUrl": ""
    },
    "builders": [
        {
            "type": "azure-arm",
            "client_id": "{{user `client_id`}}",
            "client_secret": "{{user `client_secret`}}",
            "subscription_id": "{{user `subscription_id`}}",
            "tenant_id": "{{user `tenant_id`}}",
            "managed_image_name": "{{user `image_offer`}}-{{user `image_sku`}}-{{user `image_date`}}",
            "managed_image_resource_group_name": "{{user `managed_image_resource_group_name`}}",
            "os_type": "Windows",
            "image_publisher": "{{user `image_publisher`}}",
            "image_offer": "{{user `image_offer`}}",
            "image_sku": "{{user `image_sku`}}",
            "image_version": "latest",
            "communicator": "winrm",
            "winrm_use_ssl": true,
            "winrm_insecure": true,
            "winrm_timeout": "5m",
            "winrm_username": "{{user `winrmuser`}}",
            "azure_tags": {
                "Function": "Gold image",
                "Operating System": "{{user `image_publisher`}}-{{user `image_offer`}}-{{user `image_sku`}}"
            },
            "location": "{{user `location`}}",
            "vm_size": "{{user `vm_size`}}"
        }
    ],
    "provisioners": [
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/01_Rds-PrepImage.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/02_Packages.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/03_RegionLanguage.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/04_Customise.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/05_Rds-Roles.ps1'))"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "windows-update",
            "search_criteria": "IsInstalled=0",
            "filters": [
                "exclude:$_.Title -like '*Silverlight*'",
                "include:$true"
            ],
            "update_limit": 25
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/06_SupportFunctions.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/07_MicrosoftVcRedists.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/08_MicrosoftFSLogixApps.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/09_MicrosoftEdge.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/10_Microsoft365Apps.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/11_Wvd-Agents.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/12_AdobeAcrobatReaderDC.ps1'))"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "#AppsUrl parameter used by LoBApps.ps1",
                "Write-Output \" AppsUrl parameter: {{user `AppsUrl`}}\"",
                "$env:AppsUrl = '{{user `AppsUrl`}}'",
                "[System.Environment]::SetEnvironmentVariable('AppsUrl','{{user `AppsUrl`}}',[System.EnvironmentVariableTarget]::User)",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/scripts/rds/Rds-LobApps.ps1'))"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "windows-update",
            "search_criteria": "IsInstalled=0",
            "filters": [
                "exclude:$_.Title -like '*Silverlight*'",
                "include:$true"
            ],
            "update_limit": 25
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/rds/14_Optimise-Image.ps1'))",
                "If (Get-Service -Name RdAgent -ErrorAction SilentlyContinue) { Set-Service RdAgent -StartupType Disabled }",
                "If (Get-Service -Name WindowsAzureTelemetryService -ErrorAction SilentlyContinue) { Set-Service WindowsAzureTelemetryService -StartupType Disabled }",
                "If (Get-Service -Name WindowsAzureGuestAgent -ErrorAction SilentlyContinue) { Set-Service WindowsAzureGuestAgent -StartupType Disabled }",
                "Remove-ItemProperty -Path 'HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\SysPrepExternal\\Generalize' -Name '*'"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/Get-InstalledSoftware.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/build/common/Sysprep-Image.ps1'))"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "manifest",
            "output": "packer-windows-manifest-{{user `image_date`}}.json",
            "strip_path": true
        }
    ]
}