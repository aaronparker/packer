{
    "variables": {
        "winrmuser": "packer",
        "client_id": "",
        "client_secret": "",
        "subscription_id": "",
        "tenant_id": "",
        "image_date": "",
        "managed_image_resource_group_name": "",
        "image_publisher": "MicrosoftWindowsServer",
        "image_offer": "WindowsServer",
        "image_sku": "2019-Datacenter",
        "location": "australiaeast",
        "vm_size": "Standard_D2_v3",
        "WorkingDirectory": "{{env `System_DefaultWorkingDirectory`}}",
        "Locale": "en-AU",
        "AppsUrl": "",
        "PackagesUrl": ""
    },
    "builders": [
        {
            "type": "azure-arm",
            "client_id": "{{user `client_id`}}",
            "client_secret": "{{user `client_secret`}}",
            "subscription_id": "{{user `subscription_id`}}",
            "tenant_id": "{{user `tenant_id`}}",
            "managed_image_name": "{{user `image_offer`}}-{{user `image_sku`}}-{{user `image_date`}}",
            "managed_image_resource_group_name": "{{user `managed_image_resource_group_name`}}",
            "os_type": "Windows",
            "image_publisher": "{{user `image_publisher`}}",
            "image_offer": "{{user `image_offer`}}",
            "image_sku": "{{user `image_sku`}}",
            "image_version": "latest",
            "communicator": "winrm",
            "winrm_use_ssl": true,
            "winrm_insecure": true,
            "winrm_timeout": "5m",
            "winrm_username": "{{user `winrmuser`}}",
            "azure_tags": {
                "Function": "Master image",
                "Operating System": "{{user `image_publisher`}}-{{user `image_offer`}}-{{user `image_sku`}}"
            },
            "location": "{{user `location`}}",
            "vm_size": "{{user `vm_size`}}"
        }
    ],
    "provisioners": [
        {
            "type": "powershell",
            "inline": [
                "Write-Host \"====== Disable Windows Defender real time scan\"",
                "Set-MpPreference -DisableRealtimeMonitoring $true",
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/scripts/srv/Srv-RegionalRoles.ps1'))",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/scripts/srv/Srv-Customise.ps1'))"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "windows-update",
            "search_criteria": "IsInstalled=0",
            "filters": [
                "exclude:$_.Title -like '*Silverlight*'",
                "include:$true"
            ],
            "update_limit": 25
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/scripts/srv/Srv-CoreApps.ps1'))"
            ]
        },
        {
            "type": "windows-restart"
        },
        {
            "type": "windows-update",
            "search_criteria": "IsInstalled=0",
            "filters": [
                "exclude:$_.Title -like '*Silverlight*'",
                "include:$true"
            ],
            "update_limit": 25
        },
        {
            "type": "powershell",
            "inline": [
                "[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12",
                "Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://raw.githubusercontent.com/aaronparker/packer/main/scripts/Get-InstalledSoftware.ps1'))",
                "Write-Host \"====== Enable Windows Defender real time scan\"",
                "Set-MpPreference -DisableRealtimeMonitoring $false",
                "Write-Host \"====== Sysprep\"",
                "& $env:SystemRoot\\System32\\Sysprep\\Sysprep.exe /oobe /generalize /quiet /quit",
                "while($true) { $imageState = Get-ItemProperty HKLM:\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Setup\\State | Select ImageState; if($imageState.ImageState -ne 'IMAGE_STATE_GENERALIZE_RESEAL_TO_OOBE') { Write-Output $imageState.ImageState; Start-Sleep -s 10  } else { break } }"
            ]
        }
    ],
    "post-processors": [
        {
            "type": "manifest",
            "output": "packer-WindowsServer-manifest.json",
            "strip_path": true
        }
    ]
}